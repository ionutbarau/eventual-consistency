server.port=9991
spring.application.name=payment-service
server.servlet.context-path=/payment-service
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false
#spring.data.mongodb.uri=mongodb://dev-backend-cosmos01:yw3AL4Ks5ySYByYvQc5uVnqAfIPhipz8Csr4KudD3RyvuO5bUDZIxdl0KlCDaOQ9efnpTFb74VHCoKgfXNUigA==@dev-backend-cosmos01.mongo.cosmos.azure.com:10255/?ssl=true&replicaSet=globaldb&retryWrites=false&socketKeepAlive=true&maxIdleTimeMS=20000&minPoolSize=5&maxPoolSize=10&connectTimeoutMS=30000&appName=@dev-backend-cosmos01@
spring.data.mongodb.uri=mongodb://mongodb1:27017,mongodb2:27018
spring.data.mongodb.database=payments-db
spring.data.mongodb.auto-index-creation=true
#kafka
spring.cloud.stream.kafka.binder.brokers=localhost:9093
#functionRouter is used for routing to different consumers by a routing expression
spring.cloud.stream.bindings.functionRouter-in-0.destination=outbox.event.customer
#groups together multiple instances of this application and treats them as the same logical consumer
#(when scaling this should be provided by environment variable so there will be multiple groups, each with a number of instances)
spring.cloud.stream.bindings.functionRouter-in-0.group=paymentConsumerGroup1
spring.cloud.stream.bindings.functionRouter.content-type=application/json
#enable dead letter topic.all failed events will go here. if the name is not specified each consumer will have its own DLT
spring.cloud.stream.kafka.default.consumer.enableDlq=true
spring.cloud.stream.kafka.default.consumer.dlqName=DLT
#pick up the first message that was sent when this consumer was down
spring.cloud.stream.binder.kafka.start-offset=earliest
#enable routing
spring.cloud.stream.function.routing.enabled=true
#helps in deserializing custom headers
spring.cloud.stream.kafka.binder.headerMapperBeanName=defaultKafkaHeaderMapper
interestingEvents=CustomerPendingRegistrationEvent
#Should take into account the period that Kafka is configured to keep the logs. When Kafka removes the logs
#consumed events can also be removed, as there is no chance of resending a previous sent log.
consumed.events.cleanup.cron=0 1 0 * * ?

authorization.fee=2
company.name=SOME-COMPANY
company.bankAccount=1234 5678 9101 1121
company.bankName=SOME-BANK
